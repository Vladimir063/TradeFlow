spring:
  application:
    name: user-service
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: trade
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.tradeflow.*
        spring.json.use.type.headers: true
    listener:
      ack-mode: RECORD
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: classpath:publickey.pem


  datasource:
    url: jdbc:postgresql://localhost:5476/users?currentSchema=your_schema_name
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: none     # или ваша стратегия
    properties:
      hibernate:
        default_schema: public

server:
  port: 8095
  servlet:
    session:
      cookie:
        same-site: Lax
        secure: false

management:
  tracing:
    sampling:
      probability: 1.0
    enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics


logging:
  level:
    org:
      springframework:
        security: DEBUG


token:
  signing:
    key: 53A73E5F1C4E0A2D3B5F2D784E6A1B423D6F247D1F6E5C3A596D635A75327855
