spring:
  application:
    name: company
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: company
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.tradeflow.*
        spring.json.use.type.headers: true



#  datasource:
#    url: jdbc:postgresql://localhost:5436/company?currentSchema=your_schema_name
#    username: postgres
#    password: postgres
  jpa:
    hibernate:
      ddl-auto: none     # или ваша стратегия
    properties:
      hibernate:
        default_schema: public


  data:
    redis:
      database: 0
      host: localhost
      port: 6379
      password: redis
      connect-timeout:  60000

server:
  port: 8088


management:
  tracing:
    sampling:
      probability: 1.0
    enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
